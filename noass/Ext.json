{"version":2,"name":"Ext","disableSend":false,"placeBeforeInput":false,"injectInput":false,"qrList":[{"id":3,"label":"SwipeTest","title":"","message":"/if left={{lastMessage}} right=\"...\" rule=neq else=\"\" \"/run FirstMessageTest\"","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":true,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":9,"label":"FirstMessageTest","title":"","message":"/if left={{lastMessageId}} right=0 rule=neq else=\"\" \"/run Composer\"","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":11,"label":"Composer","title":"","message":"/setvar key=previous_char_message_id {{lastMessageId}} | /addvar key=previous_char_message_id -2 |\n/messages names=off {{getvar::previous_char_message_id}}-{{getvar::previous_char_message_id}} | /setvar key=previous_char_message |\n/regex name=IEQR {{getvar::previous_char_message}} | /setvar key=infoblock |\n/if left={{getvar::infoblock}} right=\"\" rule=neq else=\"\" \"/setvar key=infoblock Previous info block:\\{\\{newline\\}\\}\\{\\{newline\\}\\}\\{\\{getvar::infoblock\\}\\}\\{\\{newline\\}\\}\\{\\{newline\\}\\}\" |\n/setvar key=previous_summary_id {{lastMessageId}} | /mod {{lastMessageId}} {{getvar::globalSummaryPeriod}} |\n/addvar key=previous_summary_id -{{pipe}} |\n/messages names=off {{getvar::previous_summary_id}}-{{getvar::previous_summary_id}} | /setvar key=previous_summary |\n/regex name=GSEQR {{getvar::previous_summary}} | /setvar key=previous_summary |\n/if left={{getvar::previous_summary}} right=\"\" rule=neq else=\"\" \"/setvar key=previous_summary Previous story summary:\\{\\{newline\\}\\}\\{\\{newline\\}\\}\\{\\{getvar::previous_summary\\}\\}\\{\\{newline\\}\\}\\{\\{newline\\}\\}\" |\n/run Enablers |\n/run Template |\n/run Prompt |\n/if left={{getvar::enableBlocks}} right=true rule=eq else=\"\" \"/run Generator\" |\n/mod {{lastMessageId}} {{getvar::globalSummaryPeriod}} | /if left={{pipe}} right=0 rule=eq else=\"\" \"/run GlobalSummaryCheck\"","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":13,"label":"Generator","title":"","message":"/setvar key=start {{lastMessageId}} |\n/addvar key=start -9 |\n/if left={{getvar::start}} right=0 rule=lt else=\"\" \"/setvar key=start 0\" |\n/messages {{getvar::start}}-{{lastMessageId}} | /setvar key=last_messages |\n/regex name=\"Blocks purge\" {{getvar::last_messages}} | /setvar key=last_messages |\n/regex name=\"Linebreaks purge\" {{getvar::last_messages}} | /setvar key=last_messages |\n/echo Generating, please wait... |\n/genraw lock=on instruct=off {{getvar::previous_summary}}{{user}} portrayal:{{newline}}<{{user}}>{{newline}}{{persona}}{{newline}}</{{user}}>{{newline}}{{newline}}{{char}} portrayal:{{newline}}<{{char}}>{{newline}}{{description}}{{newline}}</{{char}}>{{newline}}{{newline}}Story development:{{newline}}{{getvar::last_messages}}{{newline}}{{newline}}{{newline}}{{getvar::blocksPrompt}}{{newline}}{{newline}}Block(s) template:{{newline}}{{getvar::blocksTemplate}}{{newline}}{{newline}}{{getvar::infoblock}} |\n/setvar key=infoblock |\n/echo Done! |\n/setvar key=tmp {{lastMessage}}{{newline}}{{getvar::infoblock}} |\n/addswipe {{getvar::tmp}} |\n/delswipe |\n/flushvar tmp |\n/flushvar last_messages |\n/flushvar start |\n/flushvar blocksPrompt |\n/flushvar blocksTemplate |\n/flushvar infoblock |\n/flushvar previous_summary","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":37,"label":"GlobalSummaryCheck","title":"","message":"/if left={{getvar::enableGlobalSummary}} right=true rule=eq else=\"\" \"/run GlobalSummaryGenerator\"","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":35,"label":"GlobalSummaryGenerator","title":"","message":"/setvar key=previous_summary_id {{lastMessageId}} | /addvar key=previous_summary_id -{{getvar::globalSummaryPeriod}} |\n/messages names=off {{getvar::previous_summary_id}}-{{getvar::previous_summary_id}} | /setvar key=previous_summary |\n/regex name=GSEQR {{getvar::previous_summary}} | /setvar key=previous_summary |\n/if left={{getvar::previous_summary}} right=\"\" rule=neq else=\"\" \"/setvar key=previous_summary Previous story summary:\\{\\{newline\\}\\}\\{\\{newline\\}\\}\\{\\{getvar::previous_summary\\}\\}\\{\\{newline\\}\\}\\{\\{newline\\}\\}\" |\n/setvar key=start {{getvar::previous_summary_id}} | /addvar key=start 1 |\n/if left={{getvar::start}} right=0 rule=lte else=\"\" \"/setvar key=start 0\" |\n/messages {{getvar::start}}-{{lastMessageId}} |\n/trimtokens limit=60000 direction=end |\n/setvar key=last_messages | /regex name=\"Blocks purge\" {{getvar::last_messages}} | /setvar key=last_messages |\n/regex name=\"Linebreaks purge\" {{getvar::last_messages}} | /setvar key=last_messages |\n/echo Generating story summary, please wait... |\n/genraw lock=on instruct=off Current story development:{{newline}}{{getvar::last_messages}}{{newline}}{{newline}}{{getvar::globalSummaryPrompt}}{{newline}}Story summary template:{{newline}}{{getvar::globalSummaryTemplate}}{{getvar::previous_summary}} |\n/setvar key=new_summary |\n/echo Done! |\n/setvar key=tmp {{lastMessage}}{{newline}}{{newline}}{{getvar::new_summary}} |\n/addswipe {{getvar::tmp}} |\n/delswipe |\n/flushvar tmp |\n/flushvar new_summary |\n/flushvar last_messages |\n/flushvar previous_summary |\n/flushvar globalSummaryTemplate |\n/flushvar globalSummaryPrompt |\n/flushvar start |\n/flushvar previous_summary_id","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":39,"label":"InjectGlobalSummary","title":"","message":"/setvar key=previous_summary_id {{lastMessageId}} | /mod {{lastMessageId}} {{getvar::globalSummaryPeriod}} |\n/addvar key=previous_summary_id -{{pipe}} |\n/messages names=off {{getvar::previous_summary_id}}-{{getvar::previous_summary_id}} | /setvar key=previous_summary |\n/regex name=GSEQR {{getvar::previous_summary}} | /setvar key=previous_summary |\n/getchatbook | /setvar key=chatLore |\n/findentry file=chatLore summary | /setvar key=summary_uid |\n/if left={{getvar::summary_uid}} right=0 rule=gte else=\"/run CreateGlobalSummary\" \"/run EditGlobalSummary\" |\n/flushvar previous_summary_id | /flushvar previous_summary | /flushvar chatLore | /flushvar summary_uid","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":true,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":47,"label":"CreateGlobalSummary","title":"","message":"/createentry file=chatLore key=summary {{getvar::previous_summary}} | /setentryfield file=chatLore uid={{pipe}} field=constant 1","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":49,"label":"EditGlobalSummary","title":"","message":"/setentryfield file=chatLore uid={{getvar::summary_uid}} field=content {{getvar::previous_summary}}","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":19,"label":"InjectStats","title":"","message":"/setvar key=previous_char_message_id {{lastMessageId}} | /addvar key=previous_char_message_id -1 |\n/messages names=off {{getvar::previous_char_message_id}}-{{getvar::previous_char_message_id}} | /setvar key=previous_char_message |\n/regex name=IEQR {{getvar::previous_char_message}} | /setvar key=infoblock |\n/if left={{getvar::infoblock}} right=\"\" rule=neq else=\"/inject id=2 position=chat depth=\\{\\{getvar::blocksDepth\\}\\} role=assistant  \" \"/inject id=2 position=chat depth=\\{\\{getvar::blocksDepth\\}\\} role=assistant \\{\\{newline\\}\\}\\{\\{getvar::infoblock\\}\\}\\{\\{newline\\}\\}\" |\n/flushvar previous_char_message_id | /flushvar previous_char_message | /flushvar infoblock","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":true,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":31,"label":"InjectReflexion","title":"","message":"/setvar key=previous_char_message_id {{lastMessageId}} | /addvar key=previous_char_message_id -1 |\n/messages names=off {{getvar::previous_char_message_id}}-{{getvar::previous_char_message_id}} | /setvar key=previous_char_message |\n/regex name=TEQR {{getvar::previous_char_message}} | /setvar key=reflexion |\n/if left={{getvar::reflexion}} right=\"\" rule=neq else=\"/inject id=3 position=chat depth=\\{\\{getvar::blocksDepth\\}\\} role=assistant   \" \"/inject id=3 position=chat depth=\\{\\{getvar::blocksDepth\\}\\} role=assistant \\{\\{newline\\}\\}\\{\\{getvar::reflexion\\}\\}\\{\\{newline\\}\\}\" |\n/flushvar previous_char_message_id | /flushvar previous_char_message | /flushvar reflexion","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":true,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":43,"label":"RMPossibilityCheck","title":"","message":"/if left={{lastMessageId}} right=9 rule=gte else=\"/inject id=4 position=chat depth=7 role=assistant   \" \"/run InjectRandomMemory\"","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":true,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":41,"label":"InjectRandomMemory","title":"","message":"/setvar key=random_start 1 | /setvar key=random_end {{lastMessageId}} | /addvar key=random_end -7 |\n/rand round=floor from={{getvar::random_start}} to={{getvar::random_end}} | /setvar key=random_message_id |\n/mod {{getvar::random_message_id}} 2 | /addvar key=random_message_id {{pipe}} |\n/messages names=off {{getvar::random_message_id}}-{{getvar::random_message_id}} | /setvar key=random_char_message |\n/regex name=\"Blocks purge\" {{getvar::random_char_message}} | /setvar key=random_char_message |\n/regex name=\"Linebreaks purge\" {{getvar::random_char_message}} | /setvar key=random_char_message |\n/if left={{getvar::randomMemoryInject}} right=true rule=eq else=\"/inject id=4 position=chat depth=\\{\\{getvar::blocksDepth\\}\\} role=assistant   \" \"/inject id=4 position=chat depth=\\{\\{getvar::blocksDepth\\}\\} role=assistant \\{\\{newline\\}\\}<random memory>\\{\\{newline\\}\\}\\{\\{getvar::random_char_message\\}\\}\\{\\{newline\\}\\}</random memory>\\{\\{newline\\}\\}\" |\n/flushvar random_message_id | /flushvar random_char_message |\n/flushvar random_start | /flushvar random_end","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":27,"label":"Prompt","title":"","message":"/setvar key=statsPrompt `<current info>` block: use the information from characters portrayals and story development. If previous `<current info>` block given, use it as base and take its properties to the new block. Change properties only if something changes during the story development (in expositions and actions, not in speech). If there is no previous `<current info>` block, create properties randomly but appropriately to the scene. If there is timeskip, turn time forward, otherwise leave time as it is. |\n/setvar key=reflexionPrompt `<reflexion>` block: analyze the last scene according to the template. Write as if you were the author of the piece. Your main priority is highlighting elements. Word limit is 150 words. |\n/setvar key=blocksThinkingPrompt `<blocks thinking>` block: analyze the changes in the scene according to the template. |\n/setvar key=blocksPrompt Be concise, use strictly simple language. |\n/if left={{getvar::enableReflexion}} right=true rule=eq else=\"\" \"/setvar key=blocksPrompt \\{\\{getvar::reflexionPrompt\\}\\}\\{\\{newline\\}\\}\\{\\{newline\\}\\}\\{\\{getvar::blocksPrompt\\}\\}\" |\n/if left={{getvar::enableStats}} right=true rule=eq else=\"\" \"/setvar key=blocksPrompt \\{\\{getvar::statsPrompt\\}\\}\\{\\{newline\\}\\}\\{\\{newline\\}\\}\\{\\{getvar::blocksPrompt\\}\\}\" |\n/setvar key=blocksPrompt {{getvar::blocksThinkingPrompt}}{{newline}}{{newline}}{{getvar::blocksPrompt}} |\n/setvar key=blocksPrompt Write block(s) using template and strictly following it. Your answer must contain only block(s). {{newline}}{{getvar::blocksPrompt}} |\n/flushvar statsPrompt |\n/flushvar reflexionPrompt |\n/flushvar blocksThinkingPrompt |\n/setvar key=globalSummaryPrompt Summarize the most important facts and events that have happened in the story so far. If a previous `<summary>` given, use that as a base and expand with new facts. Be as concise at possible, use strictly simple, scenario-like language and limit the summary to 500 words or less. Your response should include nothing but the `<summary>` block.\n","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":true,"executeOnGroupMemberDraft":false,"automationId":""},{"id":29,"label":"Template","title":"","message":"/setvar key=statsTemplate <current info>{{newline}}```yaml{{newline}}Time: [time of day segment] \\| Season: [season of year]{{newline}}Location: [Location, sublocation (current)] \\| Weather: [Type (Sunny, Cloudy, Rainy, Snowy), specifics]{{newline}}Scene: [Notable objects enumeration in the location]{{newline}}World: [Observable surrounding actions]{{newline}}Positions: [Positions of characters in the last scene]{{newline}}Clothing: [Clothing of characters in the last scene (one-line brief list)]{{newline}}```{{newline}}</current info> |\n/setvar key=reflexionTemplate <reflexion>{{newline}}States: [characters physical/mental condition]{{newline}}Emotions: [characters emotions]{{newline}}Aspirations: [characters motivations]{{newline}}Divergences: [thoughts on whether there are differences between the characters' actions in the last scene and their described portraits, no moral judgments. If there is a major divergence, advise on how to correct the situation]{{newline}}</reflexion> |\n/setvar key=blocksThinkingTemplate <blocks thinking>{{newline}}Previous location: [Location, sublocation  from previous `<current info>` block]{{newline}}Previous positions: [Positions of characters from previous `<current info>` block]{{newline}}Character movements in the current scene: [movement1 -> movement2 -> ...]{{newline}}Current location: [Location, sublocation based on character movements and previous location]{{newline}}Current positions: [Positions of characters based on character movements]{{newline}}{{newline}}Events: [the events that took place in the scene. Format: event1 -> event2 -> ...]{{newline}}</blocks thinking> |\n/setvar key=blocksTemplate End of block(s) template |\n/if left={{getvar::enableReflexion}} right=true rule=eq else=\"\" \"/setvar key=blocksTemplate \\{\\{getvar::reflexionTemplate\\}\\}\\{\\{newline\\}\\}\\{\\{newline\\}\\}\\{\\{getvar::blocksTemplate\\}\\}\" |\n/if left={{getvar::enableStats}} right=true rule=eq else=\"\" \"/setvar key=blocksTemplate \\{\\{getvar::statsTemplate\\}\\}\\{\\{newline\\}\\}\\{\\{newline\\}\\}\\{\\{getvar::blocksTemplate\\}\\}\" |\n/setvar key=blocksTemplate {{getvar::blocksThinkingTemplate}}{{newline}}{{newline}}{{getvar::blocksTemplate}} |\n/flushvar statsTemplate |\n/flushvar reflexionTemplate |\n/flushvar blocksThinkingTemplate |\n/setvar key=globalSummaryTemplate <summary>{{newline}}<ontology>{{newline}}High-level summary of the key story elements and character relationships established so far. Format - list.{{newline}}</ontology>{{newline}}<story_summary>{{newline}}Story summary{{newline}}</story_summary>{{newline}}</summary>\n","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":true,"executeOnGroupMemberDraft":false,"automationId":""},{"id":33,"label":"Enablers","title":"","message":"/setvar key=enableBlocks true |\n/setvar key=enableStats true |\n/setvar key=enableReflexion true |\n/setvar key=enableGlobalSummary true |\n/setvar key=globalSummaryPeriod 20 |\n/setvar key=randomMemoryInject true |\n/setvar key=blocksDepth 7","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":true,"executeOnGroupMemberDraft":false,"automationId":""}],"idIndex":50}