{"version":2,"name":"Ext-utils","disableSend":false,"placeBeforeInput":false,"injectInput":false,"qrList":[{"id":1,"label":"Force blockgen","title":"","message":"/run Composer","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":17,"label":"Force summary","title":"","message":"/run GlobalSummaryGenerator","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":3,"label":"Flush injects","title":"","message":"/flushinjects","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":5,"label":"Rewrite greeting","title":"","message":"/run Formatting |\n/run GetFirstMessage |\n/setvar key=rewritePrompt Rewrite, reformat and reorganize the `<story beginning>` block using character portrayals and formatting rules. Adding name prefixes is very important. Your answer should only have a new `<story beginning>` block in it. |\n/setvar key=finalPrompt {{user}} portrayal:{{newline}}<{{user}}>{{newline}}{{persona}}{{newline}}</{{user}}>{{newline}}{{newline}}{{char}} portrayal:{{newline}}<{{char}}>{{newline}}{{description}}{{newline}}</{{char}}>{{newline}}{{newline}}Previous `<story beginning>` block:{{newline}}<story beginning>{{newline}}{{getvar::firstMessage}}{{newline}}</story beginning>{{newline}}{{newline}}{{getvar::formattingRule}}{{newline}}{{newline}}{{getvar::rewritePrompt}} |\n/if left={{input}} right=\"\" rule=neq else=\"\" \"/setvar key=finalPrompt \\{\\{getvar::finalPrompt\\}\\}\\{\\{newline\\}\\}Also include the following ideas:\\{\\{newline\\}\\}<ideas>\\{\\{newline\\}\\}\\{\\{input\\}\\}\\{\\{newline\\}\\}</ideas>\" |\n/echo Generating, please wait... |\n/genraw lock=on instruct=off {{getvar::finalPrompt}} |\n/sys {{pipe}} |\n/echo Done! |\n/flushvar rewritePrompt |\n/flushvar finalPrompt","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":11,"label":"Formatting","title":"","message":"/setvar key=formattingRule Formatting rules:{{newline}}- Actions, speech or thoughts of characters must always be preceded by **name:** prefix. The new paragraph must have a new prefix. E.g.: **{{user}}:** *smirks* \"Hello!\" *looks around and thinks* 'What should I say next?'{{newline}}- Actions within the prefix must be wrapped in *asterisks*. Actions must be in the active voice.{{newline}}- Speech must be wrapped in \"double quotes\".{{newline}}- Thoughts must be wrapped in 'single quotes'.{{newline}}- Stage directions must be separated by a newline and contain only plain text. Stage directions must be in the present tense. E.g.: He's walking through a green meadow. The sun is high.{{newline}}- The narrative consists only of stage directions and content under prefixes.","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":13,"label":"GetFirstMessage","title":"","message":"/messages names=off 0-0 | /setvar key=firstMessage","contextList":[],"preventAutoExecute":true,"isHidden":true,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":15,"label":"Generate greeting","title":"","message":"/run Formatting |\n/run GetFirstMessage |\n/setvar key=generatePrompt Generate the `<story beginning>` block using character portrayals, ideas, template and formatting rules. Adding name prefixes is very important. Your answer should only have a new `<story beginning>` block in it. |\n/echo Generating, please wait... |\n/genraw lock=on instruct=off {{user}} portrayal:{{newline}}<{{user}}>{{newline}}{{persona}}{{newline}}</{{user}}>{{newline}}{{newline}}{{char}} portrayal:{{newline}}<{{char}}>{{newline}}{{description}}{{newline}}</{{char}}>{{newline}}{{newline}}Story beggining ideas:{{newline}}<ideas>{{newline}}{{input}}{{newline}}</ideas>{{newline}}{{newline}}Story beggining template:{{newline}}<story beggining>{{newline}}Story beggining{{newline}}</story beggining>{{newline}}{{newline}}{{getvar::formattingRule}}{{newline}}{{newline}}{{getvar::generatePrompt}} |\n/sys {{pipe}} |\n/echo Done! |\n/flushvar generatePrompt","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":19,"label":"Request comment","title":"","message":"/setvar key=commentPrompt [NOTE: I will briefly stop here and, inside the `<comment>` block, I will give a response to the reader's comment below:{{newline}}{{newline}}<reader comment>{{newline}}{{input}}{{newline}}</reader comment>] |\n/echo Generating, please wait... |\n/gen lock=on as=char {{getvar::commentPrompt}} |\n/sys {{pipe}} |\n/echo Done! |\n/flushvar commentPrompt","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""},{"id":21,"label":"Generate profile","title":"","message":"/setvar key=profileTemplate <profile>{{newline}}Full name: [full character name]{{newline}}Nicknames: [character nicknames]{{newline}}Age: [if missing - just guess]{{newline}}Appearance: [one or two-word list]{{newline}}{{newline}}Temperament: [double type is allowed]{{newline}}Personality:{{newline}}Traits:{{newline}}Disadvantages:{{newline}}Weaknesses: {{newline}}Likes:{{newline}}Dislikes:{{newline}}Fears:{{newline}}Skills:{{newline}}Behavior:{{newline}}Habits:{{newline}}{{newline}}<preferences>{{newline}}Food:{{newline}}Entertainment:{{newline}}Clothes:{{newline}}Media:{{newline}}Music:{{newline}}Misc:{{newline}}</preferences>{{newline}}{{newline}}<opinion>{{newline}}Conflicts: [detailed opinion]{{newline}}Romance: [detailed opinion]{{newline}}Friends:{{newline}}Enemies:{{newline}}Strangers:{{newline}}Acquaintances:{{newline}}</opinion>{{newline}}{{newline}}Habitat: [habitat of char]{{newline}}Speech style:{{newline}}Brand words: [quoted list of brand words]{{newline}}Misc: [additional interesting info]{{newline}}</profile> |\n/setvar key=profilePrompt Write a character `<profile>` block following the template using the information from the `<info>` block. |\n/setvar key=finalPrompt <info>{{newline}}{{input}}{{newline}}</info>{{newline}}{{newline}}Template:{{newline}}{{getvar::profileTemplate}}{{newline}}{{newline}}{{getvar::profilePrompt}} |\n/echo Generating, please wait... |\n/genraw lock=on instruct=off {{getvar::finalPrompt}} |\n/sys {{pipe}} |\n/echo Done! |\n/flushvar profileTemplate |\n/flushvar profilePrompt |\n/flushvar finalPrompt","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"automationId":""}],"idIndex":22}